name: Flutter CI for release

on: [push]

defaults:
 run:
  working-directory: ./todo_app

jobs:
  build:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-java@v1
        with:
          java-version: "11.x"

      # Setup Flutter enviroment
      - uses: subosito/flutter-action@v2
        with:
          architecture: x64

      # Make sure the code is following the style defined by flutter_linter
      - name: Analyze code
        run: flutter analyze

      # Setup Android (sdkmanager) Enviroment
      - uses: malinskiy/action-android/install-sdk@release/0.1.3

      # Set up platform tools like adb
      - name: Setup Platform Tools
        run: sdkmanager platform-tools

      # Start ADB (and verify that pathing is working correctly).
      - name: List Devices
        run: adb devices

      # Verify $ANDROID_HOME is properly set for later Gradle commands.
      - name: Verify ANDROID_HOME
        run: >
          echo $ANDROID_HOME &&
          find . -type d | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/| - \1/" &&
          cd $ANDROID_HOME &&
          find . -type d | sed -e "s/[^-][^\/]*\//  |/g" -e "s/|\([^ ]\)/| - \1/"

      # List All System Images Available
      - name: List All System Images
        run: sdkmanager --list | grep system-images

      # Download System Image
      - name: Download Image
        run: sdkmanager --install "system-images;android-25;google_apis;x86_64"

      # Install Emulator Platform
      - name: Install Emulator Platform
        run: sdkmanager --install "platforms;android-25"

      # Avoid exception "Error: "emulator" package must be installed!"
      - name: Define Emulator Package
        run: sdkmanager --channel=3 emulator

      # Create Android Emulator
      - name: Create Emulator
        run: >
          echo "no" |
          avdmanager --verbose create avd --force
          --name "pixel_4.4"
          --device "pixel"
          --package "system-images;android-25;google_apis;x86_64"
          --tag "google_apis"
          --abi "x86_64"

      # Launch Android Emulator
      - name: Run Emulator
        run: $ANDROID_HOME/emulator/emulator -avd pixel_4.4 -gpu auto &

      # Install Flutter packages and plugins
      - name: Install dependencies
        run: flutter pub get

      # Run all widget and unit tests
      - name: Run tests
        run: flutter test

      # Clear any Flutter cache or previous build
      - name: Clean environment
        run: flutter clean

      # Generate Build Apk
      - name: Build
        run: flutter build apk --release

      # Upload the apk as an artifact to GH Actions
      - name: Generate APK artifact
        uses: actions/upload-artifact@v1
        with:
          name: dev-apk
          path: todo_app/build/app/outputs/apk/release/app-release.apk

      # List All Devices Again to perform install on next step
      - name: List Devices
        run: adb devices

      # Run integration_tests
      - name: Run Integration Tests
        run: dart run integration_test/perform_integration_tests.dart

      # Clear any Flutter cache or previous build
      - name: Clean environment
        run: flutter clean

      # Remove/Discard any cache, images
      # generated by any integration test script
      - name: Discard All Changes
        run: git checkout -- .
